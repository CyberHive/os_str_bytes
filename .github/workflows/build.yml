name: build

on:
  pull_request:
  push:
  schedule:
  - cron: 0 0 * * FRI

env:
  cargo_hack_flags: --feature-powerset --optional-deps

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    env:
      RUSTFLAGS: -Dwarnings
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 10
    - run: cargo install cargo-hack
    - run: cargo hack clippy ${{ env.cargo_hack_flags }}
    - run: cargo hack clippy ${{ env.cargo_hack_flags }} --tests
    - run: cargo fmt -- --check
    timeout-minutes: 5
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
  build-other:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      cargo_hack_flags: --feature-powerset --optional-deps --exclude-features 'print_bytes uniquote' --target ${{ matrix.target }}
      RUSTFLAGS: -Dwarnings
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 10
    - run: rustup install ${{ matrix.version }}
    - run: rustup default ${{ matrix.version }}
    # Clippy might not be packaged with the current nightly compiler or might
    # include broken lints on the nightly channel.
    #
    # Running Clippy on older versions prevents taking advantage of
    # improvements to its lints.
    - if: matrix.version == 'stable'
      run: rustup component add clippy
    - run: rustup target add ${{ matrix.target }}
    - run: cargo install cargo-hack
    - if: matrix.version == 'stable'
      run: cargo hack clippy ${{ env.cargo_hack_flags }}
    - if: matrix.version != 'stable'
      run: cargo hack rustc ${{ env.cargo_hack_flags }}
    timeout-minutes: 5
    strategy:
      matrix:
        target: [wasm32-unknown-unknown, wasm32-wasi, x86_64-unknown-redox]
        version: [1.51.0, stable, nightly]
        include:
        - target: x86_64-fortanix-unknown-sgx
          version: nightly
  test:
    needs: [build]
    runs-on: ${{ matrix.platform }}
    env:
      RUSTFLAGS: -Dwarnings
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 10
    - run: rustup install ${{ matrix.version }}
    - run: rustup default ${{ matrix.version }}
    - run: cargo install cargo-hack
    - run: cargo hack test ${{ env.cargo_hack_flags }}
    - run: cargo hack test ${{ env.cargo_hack_flags }} --release
    timeout-minutes: 10
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        version: [1.51.0, stable, nightly]
